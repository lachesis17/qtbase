/****************************************************************************
** Meta object code from reading C++ file 'qopengltexture.h'
**
** Created by: The Qt Meta Object Compiler version 68 (Qt 6.8.0)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include "../../../../../src/opengl/qopengltexture.h"
#include <QtCore/qmetatype.h>

#include <QtCore/qtmochelpers.h>

#include <memory>


#include <QtCore/qxptype_traits.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'qopengltexture.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 68
#error "This file was generated using the moc from 6.8.0. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

#ifndef Q_CONSTINIT
#define Q_CONSTINIT
#endif

QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
QT_WARNING_DISABLE_GCC("-Wuseless-cast")
namespace {

#ifdef QT_MOC_HAS_STRINGDATA
struct qt_meta_stringdata_CLASSQOpenGLTextureENDCLASS_t {};
constexpr auto qt_meta_stringdata_CLASSQOpenGLTextureENDCLASS = QtMocHelpers::stringData(
    "QOpenGLTexture",
    "Target",
    "Target1D",
    "Target1DArray",
    "Target2D",
    "Target2DArray",
    "Target3D",
    "TargetCubeMap",
    "TargetCubeMapArray",
    "Target2DMultisample",
    "Target2DMultisampleArray",
    "TargetRectangle",
    "TargetBuffer",
    "BindingTarget",
    "BindingTarget1D",
    "BindingTarget1DArray",
    "BindingTarget2D",
    "BindingTarget2DArray",
    "BindingTarget3D",
    "BindingTargetCubeMap",
    "BindingTargetCubeMapArray",
    "BindingTarget2DMultisample",
    "BindingTarget2DMultisampleArray",
    "BindingTargetRectangle",
    "BindingTargetBuffer",
    "MipMapGeneration",
    "GenerateMipMaps",
    "DontGenerateMipMaps",
    "TextureUnitReset",
    "ResetTextureUnit",
    "DontResetTextureUnit",
    "TextureFormat",
    "NoFormat",
    "R8_UNorm",
    "RG8_UNorm",
    "RGB8_UNorm",
    "RGBA8_UNorm",
    "R16_UNorm",
    "RG16_UNorm",
    "RGB16_UNorm",
    "RGBA16_UNorm",
    "R8_SNorm",
    "RG8_SNorm",
    "RGB8_SNorm",
    "RGBA8_SNorm",
    "R16_SNorm",
    "RG16_SNorm",
    "RGB16_SNorm",
    "RGBA16_SNorm",
    "R8U",
    "RG8U",
    "RGB8U",
    "RGBA8U",
    "R16U",
    "RG16U",
    "RGB16U",
    "RGBA16U",
    "R32U",
    "RG32U",
    "RGB32U",
    "RGBA32U",
    "R8I",
    "RG8I",
    "RGB8I",
    "RGBA8I",
    "R16I",
    "RG16I",
    "RGB16I",
    "RGBA16I",
    "R32I",
    "RG32I",
    "RGB32I",
    "RGBA32I",
    "R16F",
    "RG16F",
    "RGB16F",
    "RGBA16F",
    "R32F",
    "RG32F",
    "RGB32F",
    "RGBA32F",
    "RGB9E5",
    "RG11B10F",
    "RG3B2",
    "R5G6B5",
    "RGB5A1",
    "RGBA4",
    "RGB10A2",
    "D16",
    "D24",
    "D24S8",
    "D32",
    "D32F",
    "D32FS8X24",
    "S8",
    "RGB_DXT1",
    "RGBA_DXT1",
    "RGBA_DXT3",
    "RGBA_DXT5",
    "R_ATI1N_UNorm",
    "R_ATI1N_SNorm",
    "RG_ATI2N_UNorm",
    "RG_ATI2N_SNorm",
    "RGB_BP_UNSIGNED_FLOAT",
    "RGB_BP_SIGNED_FLOAT",
    "RGB_BP_UNorm",
    "R11_EAC_UNorm",
    "R11_EAC_SNorm",
    "RG11_EAC_UNorm",
    "RG11_EAC_SNorm",
    "RGB8_ETC2",
    "SRGB8_ETC2",
    "RGB8_PunchThrough_Alpha1_ETC2",
    "SRGB8_PunchThrough_Alpha1_ETC2",
    "RGBA8_ETC2_EAC",
    "SRGB8_Alpha8_ETC2_EAC",
    "RGB8_ETC1",
    "RGBA_ASTC_4x4",
    "RGBA_ASTC_5x4",
    "RGBA_ASTC_5x5",
    "RGBA_ASTC_6x5",
    "RGBA_ASTC_6x6",
    "RGBA_ASTC_8x5",
    "RGBA_ASTC_8x6",
    "RGBA_ASTC_8x8",
    "RGBA_ASTC_10x5",
    "RGBA_ASTC_10x6",
    "RGBA_ASTC_10x8",
    "RGBA_ASTC_10x10",
    "RGBA_ASTC_12x10",
    "RGBA_ASTC_12x12",
    "SRGB8_Alpha8_ASTC_4x4",
    "SRGB8_Alpha8_ASTC_5x4",
    "SRGB8_Alpha8_ASTC_5x5",
    "SRGB8_Alpha8_ASTC_6x5",
    "SRGB8_Alpha8_ASTC_6x6",
    "SRGB8_Alpha8_ASTC_8x5",
    "SRGB8_Alpha8_ASTC_8x6",
    "SRGB8_Alpha8_ASTC_8x8",
    "SRGB8_Alpha8_ASTC_10x5",
    "SRGB8_Alpha8_ASTC_10x6",
    "SRGB8_Alpha8_ASTC_10x8",
    "SRGB8_Alpha8_ASTC_10x10",
    "SRGB8_Alpha8_ASTC_12x10",
    "SRGB8_Alpha8_ASTC_12x12",
    "SRGB8",
    "SRGB8_Alpha8",
    "SRGB_DXT1",
    "SRGB_Alpha_DXT1",
    "SRGB_Alpha_DXT3",
    "SRGB_Alpha_DXT5",
    "SRGB_BP_UNorm",
    "DepthFormat",
    "AlphaFormat",
    "RGBFormat",
    "RGBAFormat",
    "LuminanceFormat",
    "LuminanceAlphaFormat",
    "CubeMapFace",
    "CubeMapPositiveX",
    "CubeMapNegativeX",
    "CubeMapPositiveY",
    "CubeMapNegativeY",
    "CubeMapPositiveZ",
    "CubeMapNegativeZ",
    "PixelFormat",
    "NoSourceFormat",
    "Red",
    "RG",
    "RGB",
    "BGR",
    "RGBA",
    "BGRA",
    "Red_Integer",
    "RG_Integer",
    "RGB_Integer",
    "BGR_Integer",
    "RGBA_Integer",
    "BGRA_Integer",
    "Stencil",
    "Depth",
    "DepthStencil",
    "Alpha",
    "Luminance",
    "LuminanceAlpha",
    "PixelType",
    "NoPixelType",
    "Int8",
    "UInt8",
    "Int16",
    "UInt16",
    "Int32",
    "UInt32",
    "Float16",
    "Float16OES",
    "Float32",
    "UInt32_RGB9_E5",
    "UInt32_RG11B10F",
    "UInt8_RG3B2",
    "UInt8_RG3B2_Rev",
    "UInt16_RGB5A1",
    "UInt16_RGB5A1_Rev",
    "UInt16_R5G6B5",
    "UInt16_R5G6B5_Rev",
    "UInt16_RGBA4",
    "UInt16_RGBA4_Rev",
    "UInt32_RGBA8",
    "UInt32_RGBA8_Rev",
    "UInt32_RGB10A2",
    "UInt32_RGB10A2_Rev",
    "UInt32_D24S8",
    "Float32_D32_UInt32_S8_X24",
    "SwizzleComponent",
    "SwizzleRed",
    "SwizzleGreen",
    "SwizzleBlue",
    "SwizzleAlpha",
    "SwizzleValue",
    "RedValue",
    "GreenValue",
    "BlueValue",
    "AlphaValue",
    "ZeroValue",
    "OneValue",
    "WrapMode",
    "Repeat",
    "MirroredRepeat",
    "ClampToEdge",
    "ClampToBorder",
    "CoordinateDirection",
    "DirectionS",
    "DirectionT",
    "DirectionR",
    "Feature",
    "ImmutableStorage",
    "ImmutableMultisampleStorage",
    "TextureRectangle",
    "TextureArrays",
    "Texture3D",
    "TextureMultisample",
    "TextureBuffer",
    "TextureCubeMapArrays",
    "Swizzle",
    "StencilTexturing",
    "AnisotropicFiltering",
    "NPOTTextures",
    "NPOTTextureRepeat",
    "Texture1D",
    "TextureComparisonOperators",
    "TextureMipMapLevel",
    "MaxFeatureFlag",
    "DepthStencilMode",
    "DepthMode",
    "StencilMode",
    "ComparisonFunction",
    "CompareLessEqual",
    "CompareGreaterEqual",
    "CompareLess",
    "CompareGreater",
    "CompareEqual",
    "CompareNotEqual",
    "CompareAlways",
    "CompareNever",
    "CommpareNotEqual",
    "Filter",
    "Nearest",
    "Linear",
    "NearestMipMapNearest",
    "NearestMipMapLinear",
    "LinearMipMapNearest",
    "LinearMipMapLinear"
);
#else  // !QT_MOC_HAS_STRINGDATA
#error "qtmochelpers.h not found or too old."
#endif // !QT_MOC_HAS_STRINGDATA
} // unnamed namespace

Q_CONSTINIT static const uint qt_meta_data_CLASSQOpenGLTextureENDCLASS[] = {

 // content:
      12,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       0,    0, // properties
      16,   14, // enums/sets
       0,    0, // constructors
       4,       // flags
       0,       // signalCount

 // enums: name, alias, flags, count, data
       1,    1, 0x0,   11,   94,
      13,   13, 0x0,   11,  116,
      25,   25, 0x0,    2,  138,
      28,   28, 0x0,    2,  142,
      31,   31, 0x0,  126,  146,
     158,  158, 0x0,    6,  398,
     165,  165, 0x0,   19,  410,
     185,  185, 0x0,   26,  448,
     212,  212, 0x0,    4,  500,
     217,  217, 0x0,    6,  508,
     224,  224, 0x0,    4,  520,
     229,  229, 0x0,    3,  528,
     233,  233, 0x0,   17,  534,
     251,  251, 0x0,    2,  568,
     254,  254, 0x0,    9,  572,
     264,  264, 0x0,    6,  590,

 // enum data: key, value
       2, uint(QOpenGLTexture::Target1D),
       3, uint(QOpenGLTexture::Target1DArray),
       4, uint(QOpenGLTexture::Target2D),
       5, uint(QOpenGLTexture::Target2DArray),
       6, uint(QOpenGLTexture::Target3D),
       7, uint(QOpenGLTexture::TargetCubeMap),
       8, uint(QOpenGLTexture::TargetCubeMapArray),
       9, uint(QOpenGLTexture::Target2DMultisample),
      10, uint(QOpenGLTexture::Target2DMultisampleArray),
      11, uint(QOpenGLTexture::TargetRectangle),
      12, uint(QOpenGLTexture::TargetBuffer),
      14, uint(QOpenGLTexture::BindingTarget1D),
      15, uint(QOpenGLTexture::BindingTarget1DArray),
      16, uint(QOpenGLTexture::BindingTarget2D),
      17, uint(QOpenGLTexture::BindingTarget2DArray),
      18, uint(QOpenGLTexture::BindingTarget3D),
      19, uint(QOpenGLTexture::BindingTargetCubeMap),
      20, uint(QOpenGLTexture::BindingTargetCubeMapArray),
      21, uint(QOpenGLTexture::BindingTarget2DMultisample),
      22, uint(QOpenGLTexture::BindingTarget2DMultisampleArray),
      23, uint(QOpenGLTexture::BindingTargetRectangle),
      24, uint(QOpenGLTexture::BindingTargetBuffer),
      26, uint(QOpenGLTexture::GenerateMipMaps),
      27, uint(QOpenGLTexture::DontGenerateMipMaps),
      29, uint(QOpenGLTexture::ResetTextureUnit),
      30, uint(QOpenGLTexture::DontResetTextureUnit),
      32, uint(QOpenGLTexture::NoFormat),
      33, uint(QOpenGLTexture::R8_UNorm),
      34, uint(QOpenGLTexture::RG8_UNorm),
      35, uint(QOpenGLTexture::RGB8_UNorm),
      36, uint(QOpenGLTexture::RGBA8_UNorm),
      37, uint(QOpenGLTexture::R16_UNorm),
      38, uint(QOpenGLTexture::RG16_UNorm),
      39, uint(QOpenGLTexture::RGB16_UNorm),
      40, uint(QOpenGLTexture::RGBA16_UNorm),
      41, uint(QOpenGLTexture::R8_SNorm),
      42, uint(QOpenGLTexture::RG8_SNorm),
      43, uint(QOpenGLTexture::RGB8_SNorm),
      44, uint(QOpenGLTexture::RGBA8_SNorm),
      45, uint(QOpenGLTexture::R16_SNorm),
      46, uint(QOpenGLTexture::RG16_SNorm),
      47, uint(QOpenGLTexture::RGB16_SNorm),
      48, uint(QOpenGLTexture::RGBA16_SNorm),
      49, uint(QOpenGLTexture::R8U),
      50, uint(QOpenGLTexture::RG8U),
      51, uint(QOpenGLTexture::RGB8U),
      52, uint(QOpenGLTexture::RGBA8U),
      53, uint(QOpenGLTexture::R16U),
      54, uint(QOpenGLTexture::RG16U),
      55, uint(QOpenGLTexture::RGB16U),
      56, uint(QOpenGLTexture::RGBA16U),
      57, uint(QOpenGLTexture::R32U),
      58, uint(QOpenGLTexture::RG32U),
      59, uint(QOpenGLTexture::RGB32U),
      60, uint(QOpenGLTexture::RGBA32U),
      61, uint(QOpenGLTexture::R8I),
      62, uint(QOpenGLTexture::RG8I),
      63, uint(QOpenGLTexture::RGB8I),
      64, uint(QOpenGLTexture::RGBA8I),
      65, uint(QOpenGLTexture::R16I),
      66, uint(QOpenGLTexture::RG16I),
      67, uint(QOpenGLTexture::RGB16I),
      68, uint(QOpenGLTexture::RGBA16I),
      69, uint(QOpenGLTexture::R32I),
      70, uint(QOpenGLTexture::RG32I),
      71, uint(QOpenGLTexture::RGB32I),
      72, uint(QOpenGLTexture::RGBA32I),
      73, uint(QOpenGLTexture::R16F),
      74, uint(QOpenGLTexture::RG16F),
      75, uint(QOpenGLTexture::RGB16F),
      76, uint(QOpenGLTexture::RGBA16F),
      77, uint(QOpenGLTexture::R32F),
      78, uint(QOpenGLTexture::RG32F),
      79, uint(QOpenGLTexture::RGB32F),
      80, uint(QOpenGLTexture::RGBA32F),
      81, uint(QOpenGLTexture::RGB9E5),
      82, uint(QOpenGLTexture::RG11B10F),
      83, uint(QOpenGLTexture::RG3B2),
      84, uint(QOpenGLTexture::R5G6B5),
      85, uint(QOpenGLTexture::RGB5A1),
      86, uint(QOpenGLTexture::RGBA4),
      87, uint(QOpenGLTexture::RGB10A2),
      88, uint(QOpenGLTexture::D16),
      89, uint(QOpenGLTexture::D24),
      90, uint(QOpenGLTexture::D24S8),
      91, uint(QOpenGLTexture::D32),
      92, uint(QOpenGLTexture::D32F),
      93, uint(QOpenGLTexture::D32FS8X24),
      94, uint(QOpenGLTexture::S8),
      95, uint(QOpenGLTexture::RGB_DXT1),
      96, uint(QOpenGLTexture::RGBA_DXT1),
      97, uint(QOpenGLTexture::RGBA_DXT3),
      98, uint(QOpenGLTexture::RGBA_DXT5),
      99, uint(QOpenGLTexture::R_ATI1N_UNorm),
     100, uint(QOpenGLTexture::R_ATI1N_SNorm),
     101, uint(QOpenGLTexture::RG_ATI2N_UNorm),
     102, uint(QOpenGLTexture::RG_ATI2N_SNorm),
     103, uint(QOpenGLTexture::RGB_BP_UNSIGNED_FLOAT),
     104, uint(QOpenGLTexture::RGB_BP_SIGNED_FLOAT),
     105, uint(QOpenGLTexture::RGB_BP_UNorm),
     106, uint(QOpenGLTexture::R11_EAC_UNorm),
     107, uint(QOpenGLTexture::R11_EAC_SNorm),
     108, uint(QOpenGLTexture::RG11_EAC_UNorm),
     109, uint(QOpenGLTexture::RG11_EAC_SNorm),
     110, uint(QOpenGLTexture::RGB8_ETC2),
     111, uint(QOpenGLTexture::SRGB8_ETC2),
     112, uint(QOpenGLTexture::RGB8_PunchThrough_Alpha1_ETC2),
     113, uint(QOpenGLTexture::SRGB8_PunchThrough_Alpha1_ETC2),
     114, uint(QOpenGLTexture::RGBA8_ETC2_EAC),
     115, uint(QOpenGLTexture::SRGB8_Alpha8_ETC2_EAC),
     116, uint(QOpenGLTexture::RGB8_ETC1),
     117, uint(QOpenGLTexture::RGBA_ASTC_4x4),
     118, uint(QOpenGLTexture::RGBA_ASTC_5x4),
     119, uint(QOpenGLTexture::RGBA_ASTC_5x5),
     120, uint(QOpenGLTexture::RGBA_ASTC_6x5),
     121, uint(QOpenGLTexture::RGBA_ASTC_6x6),
     122, uint(QOpenGLTexture::RGBA_ASTC_8x5),
     123, uint(QOpenGLTexture::RGBA_ASTC_8x6),
     124, uint(QOpenGLTexture::RGBA_ASTC_8x8),
     125, uint(QOpenGLTexture::RGBA_ASTC_10x5),
     126, uint(QOpenGLTexture::RGBA_ASTC_10x6),
     127, uint(QOpenGLTexture::RGBA_ASTC_10x8),
     128, uint(QOpenGLTexture::RGBA_ASTC_10x10),
     129, uint(QOpenGLTexture::RGBA_ASTC_12x10),
     130, uint(QOpenGLTexture::RGBA_ASTC_12x12),
     131, uint(QOpenGLTexture::SRGB8_Alpha8_ASTC_4x4),
     132, uint(QOpenGLTexture::SRGB8_Alpha8_ASTC_5x4),
     133, uint(QOpenGLTexture::SRGB8_Alpha8_ASTC_5x5),
     134, uint(QOpenGLTexture::SRGB8_Alpha8_ASTC_6x5),
     135, uint(QOpenGLTexture::SRGB8_Alpha8_ASTC_6x6),
     136, uint(QOpenGLTexture::SRGB8_Alpha8_ASTC_8x5),
     137, uint(QOpenGLTexture::SRGB8_Alpha8_ASTC_8x6),
     138, uint(QOpenGLTexture::SRGB8_Alpha8_ASTC_8x8),
     139, uint(QOpenGLTexture::SRGB8_Alpha8_ASTC_10x5),
     140, uint(QOpenGLTexture::SRGB8_Alpha8_ASTC_10x6),
     141, uint(QOpenGLTexture::SRGB8_Alpha8_ASTC_10x8),
     142, uint(QOpenGLTexture::SRGB8_Alpha8_ASTC_10x10),
     143, uint(QOpenGLTexture::SRGB8_Alpha8_ASTC_12x10),
     144, uint(QOpenGLTexture::SRGB8_Alpha8_ASTC_12x12),
     145, uint(QOpenGLTexture::SRGB8),
     146, uint(QOpenGLTexture::SRGB8_Alpha8),
     147, uint(QOpenGLTexture::SRGB_DXT1),
     148, uint(QOpenGLTexture::SRGB_Alpha_DXT1),
     149, uint(QOpenGLTexture::SRGB_Alpha_DXT3),
     150, uint(QOpenGLTexture::SRGB_Alpha_DXT5),
     151, uint(QOpenGLTexture::SRGB_BP_UNorm),
     152, uint(QOpenGLTexture::DepthFormat),
     153, uint(QOpenGLTexture::AlphaFormat),
     154, uint(QOpenGLTexture::RGBFormat),
     155, uint(QOpenGLTexture::RGBAFormat),
     156, uint(QOpenGLTexture::LuminanceFormat),
     157, uint(QOpenGLTexture::LuminanceAlphaFormat),
     159, uint(QOpenGLTexture::CubeMapPositiveX),
     160, uint(QOpenGLTexture::CubeMapNegativeX),
     161, uint(QOpenGLTexture::CubeMapPositiveY),
     162, uint(QOpenGLTexture::CubeMapNegativeY),
     163, uint(QOpenGLTexture::CubeMapPositiveZ),
     164, uint(QOpenGLTexture::CubeMapNegativeZ),
     166, uint(QOpenGLTexture::NoSourceFormat),
     167, uint(QOpenGLTexture::Red),
     168, uint(QOpenGLTexture::RG),
     169, uint(QOpenGLTexture::RGB),
     170, uint(QOpenGLTexture::BGR),
     171, uint(QOpenGLTexture::RGBA),
     172, uint(QOpenGLTexture::BGRA),
     173, uint(QOpenGLTexture::Red_Integer),
     174, uint(QOpenGLTexture::RG_Integer),
     175, uint(QOpenGLTexture::RGB_Integer),
     176, uint(QOpenGLTexture::BGR_Integer),
     177, uint(QOpenGLTexture::RGBA_Integer),
     178, uint(QOpenGLTexture::BGRA_Integer),
     179, uint(QOpenGLTexture::Stencil),
     180, uint(QOpenGLTexture::Depth),
     181, uint(QOpenGLTexture::DepthStencil),
     182, uint(QOpenGLTexture::Alpha),
     183, uint(QOpenGLTexture::Luminance),
     184, uint(QOpenGLTexture::LuminanceAlpha),
     186, uint(QOpenGLTexture::NoPixelType),
     187, uint(QOpenGLTexture::Int8),
     188, uint(QOpenGLTexture::UInt8),
     189, uint(QOpenGLTexture::Int16),
     190, uint(QOpenGLTexture::UInt16),
     191, uint(QOpenGLTexture::Int32),
     192, uint(QOpenGLTexture::UInt32),
     193, uint(QOpenGLTexture::Float16),
     194, uint(QOpenGLTexture::Float16OES),
     195, uint(QOpenGLTexture::Float32),
     196, uint(QOpenGLTexture::UInt32_RGB9_E5),
     197, uint(QOpenGLTexture::UInt32_RG11B10F),
     198, uint(QOpenGLTexture::UInt8_RG3B2),
     199, uint(QOpenGLTexture::UInt8_RG3B2_Rev),
     200, uint(QOpenGLTexture::UInt16_RGB5A1),
     201, uint(QOpenGLTexture::UInt16_RGB5A1_Rev),
     202, uint(QOpenGLTexture::UInt16_R5G6B5),
     203, uint(QOpenGLTexture::UInt16_R5G6B5_Rev),
     204, uint(QOpenGLTexture::UInt16_RGBA4),
     205, uint(QOpenGLTexture::UInt16_RGBA4_Rev),
     206, uint(QOpenGLTexture::UInt32_RGBA8),
     207, uint(QOpenGLTexture::UInt32_RGBA8_Rev),
     208, uint(QOpenGLTexture::UInt32_RGB10A2),
     209, uint(QOpenGLTexture::UInt32_RGB10A2_Rev),
     210, uint(QOpenGLTexture::UInt32_D24S8),
     211, uint(QOpenGLTexture::Float32_D32_UInt32_S8_X24),
     213, uint(QOpenGLTexture::SwizzleRed),
     214, uint(QOpenGLTexture::SwizzleGreen),
     215, uint(QOpenGLTexture::SwizzleBlue),
     216, uint(QOpenGLTexture::SwizzleAlpha),
     218, uint(QOpenGLTexture::RedValue),
     219, uint(QOpenGLTexture::GreenValue),
     220, uint(QOpenGLTexture::BlueValue),
     221, uint(QOpenGLTexture::AlphaValue),
     222, uint(QOpenGLTexture::ZeroValue),
     223, uint(QOpenGLTexture::OneValue),
     225, uint(QOpenGLTexture::Repeat),
     226, uint(QOpenGLTexture::MirroredRepeat),
     227, uint(QOpenGLTexture::ClampToEdge),
     228, uint(QOpenGLTexture::ClampToBorder),
     230, uint(QOpenGLTexture::DirectionS),
     231, uint(QOpenGLTexture::DirectionT),
     232, uint(QOpenGLTexture::DirectionR),
     234, uint(QOpenGLTexture::ImmutableStorage),
     235, uint(QOpenGLTexture::ImmutableMultisampleStorage),
     236, uint(QOpenGLTexture::TextureRectangle),
     237, uint(QOpenGLTexture::TextureArrays),
     238, uint(QOpenGLTexture::Texture3D),
     239, uint(QOpenGLTexture::TextureMultisample),
     240, uint(QOpenGLTexture::TextureBuffer),
     241, uint(QOpenGLTexture::TextureCubeMapArrays),
     242, uint(QOpenGLTexture::Swizzle),
     243, uint(QOpenGLTexture::StencilTexturing),
     244, uint(QOpenGLTexture::AnisotropicFiltering),
     245, uint(QOpenGLTexture::NPOTTextures),
     246, uint(QOpenGLTexture::NPOTTextureRepeat),
     247, uint(QOpenGLTexture::Texture1D),
     248, uint(QOpenGLTexture::TextureComparisonOperators),
     249, uint(QOpenGLTexture::TextureMipMapLevel),
     250, uint(QOpenGLTexture::MaxFeatureFlag),
     252, uint(QOpenGLTexture::DepthMode),
     253, uint(QOpenGLTexture::StencilMode),
     255, uint(QOpenGLTexture::CompareLessEqual),
     256, uint(QOpenGLTexture::CompareGreaterEqual),
     257, uint(QOpenGLTexture::CompareLess),
     258, uint(QOpenGLTexture::CompareGreater),
     259, uint(QOpenGLTexture::CompareEqual),
     260, uint(QOpenGLTexture::CompareNotEqual),
     261, uint(QOpenGLTexture::CompareAlways),
     262, uint(QOpenGLTexture::CompareNever),
     263, uint(QOpenGLTexture::CommpareNotEqual),
     265, uint(QOpenGLTexture::Nearest),
     266, uint(QOpenGLTexture::Linear),
     267, uint(QOpenGLTexture::NearestMipMapNearest),
     268, uint(QOpenGLTexture::NearestMipMapLinear),
     269, uint(QOpenGLTexture::LinearMipMapNearest),
     270, uint(QOpenGLTexture::LinearMipMapLinear),

       0        // eod
};

Q_CONSTINIT const QMetaObject QOpenGLTexture::staticMetaObject = { {
    nullptr,
    qt_meta_stringdata_CLASSQOpenGLTextureENDCLASS.offsetsAndSizes,
    qt_meta_data_CLASSQOpenGLTextureENDCLASS,
    nullptr,
    nullptr,
    qt_incomplete_metaTypeArray<qt_meta_stringdata_CLASSQOpenGLTextureENDCLASS_t,
        // enum 'Target'
        QtPrivate::TypeAndForceComplete<QOpenGLTexture::Target, std::true_type>,
        // enum 'BindingTarget'
        QtPrivate::TypeAndForceComplete<QOpenGLTexture::BindingTarget, std::true_type>,
        // enum 'MipMapGeneration'
        QtPrivate::TypeAndForceComplete<QOpenGLTexture::MipMapGeneration, std::true_type>,
        // enum 'TextureUnitReset'
        QtPrivate::TypeAndForceComplete<QOpenGLTexture::TextureUnitReset, std::true_type>,
        // enum 'TextureFormat'
        QtPrivate::TypeAndForceComplete<QOpenGLTexture::TextureFormat, std::true_type>,
        // enum 'CubeMapFace'
        QtPrivate::TypeAndForceComplete<QOpenGLTexture::CubeMapFace, std::true_type>,
        // enum 'PixelFormat'
        QtPrivate::TypeAndForceComplete<QOpenGLTexture::PixelFormat, std::true_type>,
        // enum 'PixelType'
        QtPrivate::TypeAndForceComplete<QOpenGLTexture::PixelType, std::true_type>,
        // enum 'SwizzleComponent'
        QtPrivate::TypeAndForceComplete<QOpenGLTexture::SwizzleComponent, std::true_type>,
        // enum 'SwizzleValue'
        QtPrivate::TypeAndForceComplete<QOpenGLTexture::SwizzleValue, std::true_type>,
        // enum 'WrapMode'
        QtPrivate::TypeAndForceComplete<QOpenGLTexture::WrapMode, std::true_type>,
        // enum 'CoordinateDirection'
        QtPrivate::TypeAndForceComplete<QOpenGLTexture::CoordinateDirection, std::true_type>,
        // enum 'Feature'
        QtPrivate::TypeAndForceComplete<QOpenGLTexture::Feature, std::true_type>,
        // enum 'DepthStencilMode'
        QtPrivate::TypeAndForceComplete<QOpenGLTexture::DepthStencilMode, std::true_type>,
        // enum 'ComparisonFunction'
        QtPrivate::TypeAndForceComplete<QOpenGLTexture::ComparisonFunction, std::true_type>,
        // enum 'Filter'
        QtPrivate::TypeAndForceComplete<QOpenGLTexture::Filter, std::true_type>,
        // Q_OBJECT / Q_GADGET
        QtPrivate::TypeAndForceComplete<QOpenGLTexture, std::true_type>
    >,
    nullptr
} };

QT_WARNING_POP
